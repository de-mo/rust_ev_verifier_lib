<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ (c) Copyright 2023 Swiss Post Ltd.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<xs:schema xmlns:decrypt="http://www.evoting.ch/xmlns/decrypt/1"
					 xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.evoting.ch/xmlns/decrypt/1"
					 elementFormDefault="qualified" attributeFormDefault="qualified">

	<xs:simpleType name="identifierType">
		<xs:restriction base="xs:token">
			<xs:maxLength value="50"/>
			<xs:minLength value="1"/>
		</xs:restriction>
	</xs:simpleType>


	<xs:element name="results">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="contestIdentification" type="decrypt:identifierType"/>
				<xs:element name="castBallots" type="xs:nonNegativeInteger"/>
				<xs:element name="ballotsBox" type="decrypt:ballotBoxType"
										minOccurs="1" maxOccurs="unbounded"/>
				<xs:element name="signature" type="xs:base64Binary"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="ballotBoxType">
		<xs:sequence>
			<xs:element name="ballotBoxIdentification" type="decrypt:identifierType"/>
			<xs:element name="countingCircle" type="decrypt:countingCircleType"
									minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="countingCircleType">
		<xs:sequence>
			<xs:element name="countingCircleIdentification" type="decrypt:identifierType"/>
			<xs:element name="domainOfInfluence" type="decrypt:domainOfInfluenceType"
									minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="domainOfInfluenceType">
		<xs:sequence>
			<xs:element name="domainOfInfluenceIdentification" type="decrypt:identifierType"/>
			<xs:element name="vote" type="decrypt:voteType" minOccurs="0"
									maxOccurs="unbounded"/>
			<xs:element name="election" type="decrypt:electionType"
									minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="voteType">
		<xs:sequence>
			<xs:element name="voteIdentification" type="decrypt:identifierType"/>
			<xs:element name="ballot" type="decrypt:ballotVoteType"
									minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="electionType">
		<xs:sequence>
			<xs:element name="electionIdentification" type="decrypt:identifierType"/>
			<xs:element name="ballot" type="decrypt:ballotElectionType"
									minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="ballotVoteType">
		<xs:sequence>
			<xs:element name="chosenAnswerIdentification" type="decrypt:identifierType"
									minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="ballotElectionType">
		<xs:sequence>
			<xs:element name="chosenListIdentification" type="decrypt:identifierType" minOccurs="0"/>
			<xs:element name="chosenCandidateListIdentification" type="decrypt:identifierType"
									minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="chosenCandidateIdentification" type="decrypt:identifierType"
									minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="chosenWriteInsCandidateValue" type="xs:string"
									minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>


</xs:schema>
